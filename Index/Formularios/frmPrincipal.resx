<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MConfig.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMrSURBVFhH3VZNaBNREP7q/0EUBEEPCh700Esv6knoyVqq
        bbLBXBVRinoQLyJe1JO/hypoRTTN5qJQEC+CFpUiUvAgiGixilC1+bGxttpWbEy6z5ntbHy7WWy6G4r4
        wUf2zcx+8968eW+D/w7TXUgpE93M6SRuiHl+YCWwmhIrh/mLsNR1LBZ37WFdxlJK2iBDWCk06hNgkr9e
        3LBMbFXdWCjD8FBJnOYkJRN9VO6rtOKSdwKTSUxMm7hAz895bCVxRF4PB5XC+nETP/Rk1fCniTHeKpEJ
        DlrxLZ8E34jtVJk1TFrtQbG54ujdTpEJDtrPPROdmHREueHI1iTuMthmN6PE2RVIISLucCChTY5wKYHX
        Yq5A0UQ/x4yYmOKtE3NtkE+iyOLUaPfFVAEq+QOO4Vgx1QZU3gNO5xdM5PzOPB27JYWbGLYnQLHUF0fV
        KSwQd3DQijtYVCfZzorbhlKokyPoiit14YmEBId0uEuYSQkf81ln8rNvzFyu6JyBndkoHjrMGDNHiG80
        uoBe+CX4G+d8D1DSjqwBpXFMXHwZbftl4gP1wnE6EZudZtNZTOCt1YVWitnHE6a4w/J6dUgbuOOZgBrc
        i2XixkgzVqj4zP3OK/NOgJJvtwOrwVAMGynBFyrzNfrdQkwMGig6iTUOZCKIUnXOfTQwTuNy8+WvoOCa
        gPaxmhUkes+TqFpO5VqxgTX45qNrOM6k1cdULxbZ4rMhG0OLj7DNdAQ5+u1Jt+HVSwOW1y+8K1LB4LfX
        wjOq/c8Fk4lhR2YXvlXEteLrcBzLJWzuGI1jZTaC2y5ROnbidoHsh/Q46pleqtI6cYcDiT3ThH3/POQN
        rNUnwGNxhQcJ9jnC8z4BOgX73xuY1MQfKaBO3GVUbAGdHr4PxB0MJHRJF9V4Xm9CGjcPGfjuiVFk6w/1
        leNye0Udkvhn+u3hJF6fQ66CSAUDr5JOwRs/8So4xbeoSAVHJoomERyg5xM0oXdakjIHWzBBfXCSj6nY
        XP8DQoHK3ODspV0VA0+dxDYbUfi0G6vsYEK2DfX6x6nmoN5IuiYQRVpc84NcFMco8ajD0M32bwH4DSlI
        RqZ9f6C/AAAAAElFTkSuQmCC
</value>
  </data>
</root>